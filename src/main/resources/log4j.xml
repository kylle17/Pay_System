<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">




	<!-- Appenders -->
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<param name="Target" value="System.out" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-5p: %c - %m%n" />
		</layout>
	</appender>
	
	
	
	
	
	<!-- Application Loggers -->
	<logger name="com.myco">
		<level value="warn" />
	</logger>
	
	<!-- 3rdparty Loggers -->
	<logger name="org.springframework.core">
		<level value="warn" />
	</logger>
	
	<logger name="org.springframework.beans">
		<level value="warn" />
	</logger>
	
	<logger name="org.springframework.context">
		<level value="warn" />
	</logger>

	<logger name="org.springframework.web">
		<level value="warn" />
	</logger>







	<!--=========================================================================================================-->
	<!--========== SQL Logger ===================================================================================-->
	<!--=========================================================================================================-->
	
	

	<!-- sqlonly
			: SQL 쿼리 문장만 로그로 남긴다. 
			  PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다.	-->
	<logger name="jdbc.sqlonly" > 
		<level value="info"/> 
		<appender-ref ref="console" />
	</logger>




	<!-- sqltiming
	      : SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. -->
	<logger name="jdbc.sqltiming" >
		<level value="info" />
		<appender-ref ref="console" />
	</logger>




	<!-- result set table
			:  SQL 결과 조회된 데이터의 table을 로그로 남긴다. -->
	<logger name="jdbc.resultsettable"> 
		<level value="info"/>  
		<appender-ref ref="console" />
	</logger> 




	<!-- audit 
		: ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 
		    많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 
		    사용을 권장하지 않는다. -->
<!--
 	<logger name="jdbc.audit" > 
		<level value="warn"/>  
		<appender-ref ref="console" />
	</logger> 
 -->




	<!-- result test
		:  ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다. -->
<!-- 
	<logger name="jdbc.resultset">
		<level value="warn" />
		<appender-ref ref="console" />
	</logger>
 -->




	<!-- 
		Root Logger
		: 모든 내용이 다 출력된다. 로그양이 너무 방대하다.  
	-->
	
<!--  	
	<root>
		<priority value="info" />
		<appender-ref ref="console" />
	</root>
 -->	
	
	
	
	
	
	
</log4j:configuration>
